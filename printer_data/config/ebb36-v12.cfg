## ebb36
[mcu ebb36]
# run the following command to locate the uuid >   ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0
canbus_uuid: a3605965c267 

## ebb36
[temperature_sensor ebb36]
sensor_type: temperature_mcu
sensor_mcu: ebb36

## HOT END FAN
[heater_fan hotend_fan]
pin: ebb36:PA0   # FAN1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

## PART COOLING
[fan]
pin: ebb36:PA1 # FAN2
kick_start_time: 0.5
off_below: 0.10
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
cycle_time: 0.15

## EXTRUDER 
[extruder]
step_pin: ebb36:PD0
dir_pin: !ebb36:PD1
enable_pin: !ebb36:PD2
#rotation_distance: 22.67895 #for 5mm Shaft Driven Bondtech gearsets
rotation_distance: 26.72306036
gear_ratio: 50:8 #for sherpa mini 8t motor
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ebb36:PB13
sensor_type: MAX31865
sensor_pin: ebb36:PA4
spi_bus: spi1
min_temp: -50
max_temp: 350
rtd_nominal_r = 1000
rtd_reference_r = 4300
rtd_num_of_wires: 2

## EXTRUDER MOTOR
[tmc2209 extruder]
uart_pin: ebb36:PA15

## ADXL345
[adxl345]
cs_pin: ebb36:PB12
spi_software_sclk_pin: ebb36:PB10
spi_software_mosi_pin: ebb36:PB11
spi_software_miso_pin: ebb36:PB2
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345

## RGB
[neopixel tool0_leds]
pin: ebb36:PD3
chain_count: 10
color_order: GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

[probe]
pin: ebb36:PB6
x_offset: 0.0
y_offset: 0.0
speed: 10
samples: 3
sample_retract_dist: 3.0
samples_result: median
samples_tolerance: 0.006
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        STATUS_COOLING
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
        STATUS_HOMING
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            STATUS_COOLING
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
            STATUS_HOMING
        {% endif %}
    {% endif %}
